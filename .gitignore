__pycache__/
pretrained_weights/
output/
.venv/
mlrun*/
meta_data*/
exp_output*/
debug*
data/
data
ultimatevocalremover_api*

*.pyc
*.pth
*.pt
*.pkl
*.bin
*.pyc

body_templates
glove
*.wav_fea_pt_type2
*.model
*.motion
*.urdf
*.skeleton
difftraj/data_loaders/humanml/data/dataset.py
cfg_files_templates
tensorboard_log
*__pycache__*
__pycache__/
out/
videos/
results/
wandb/
draft/
Gestures/
export_video_data
Gestures_extras/
output/
outputs/
.neptune/
results
openpose
*.tar
*.json
*.wav
*.tar.gz
# Thirdparty/contact-human-dynamics
.ipynb_checkpoints/
.idea/
.history/
crop_video_out/
pixie-env
eval-script
results
# data/*
PLANT_tests
Testsamples/*/results
logs/
*.pyc
__pycache__
build
temp
tmp
*.mkv
*.jpg
*.png
*.webm
*.mp4
*.avi
*.html
*.pyc
*.o
*.so
*.jpg
*.png
*.obj
*.npy
*.npz
*.pkl
*.pth
*.pt
*.zip
*.h5
# *.json

test_results
input
images
FFHQ
FFHQ_seg

condor/logs
condor/jobs
slogs

.idea

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
transformations/nerf
model_files/*
!model_files/*.py
!data/*.png
!data/id_pic
!test/*.py

!doc/images/*.png
!doc/images/*.jpg
!doc/*.jpg
!doc/*.png
*.jpkl
data_scv
demo
*.tar.gz
!smplx_parts_segm.pkl
dont_track
Thirdparty/PyMAF_fork/data
model_files
.vscode/launch.json
Thirdparty/contact-human-dynamics/data/example_data
clips.txt
*.ckpt
lines.txt
shuffled_clips.txt
Thirdparty/ViTPose
Thirdparty/mmcv
Thirdparty/ViTPose
difftraj/dataset/HumanML3D/texts/*
difftraj/kit/text_mot_match/eval/*
*.pt
difftraj/save/*
difftraj/t2m/text_mot_match/eval/*
Thirdparty/GLAMR/hybrik_model_files

train_cmds.bash
tmp_commands.sh
rsync.sh
bak.py
debug_load_state.py
./configs/emo_inference_bkp
# data storage
pretrained_weights
FaceVidGather


configs/emo_inference_bkp/
configs/emo_inference/
exp_output
train.sh
infer.sh
configs/emo_inference/test_cases.py
checkpoints

wsl_script/
model_files/
model_files_part/
lib/models/preproc/__pycache__/detector.cpython-39.pyc
ViTPose/